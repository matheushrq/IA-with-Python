# -*- coding: utf-8 -*-
"""exercicio Regressão Linear Simples_a1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JpVstZRwL-NSalUvQipjfIwdmtanMCCo

Conceitos básicos sobre Pandas
"""

#importando o pacote pandas 
import pandas as pd

#criando a tabela com o dados
df = pd.DataFrame({'area':[8277,7672,8567,9714,43510,
                           2012,3461,9921,1957,49255,
                           5200,12507,36783,3927,
                           3177,74077,41430],
                   
                   'produção' :[80211,39009,86956,114606,411926,
                                18151,23795,76284,36430,301883,
                                86678,112914,225959,16461,
                                40591,797503,845351],
                  })

#mostra a matriz de correlação entre os atributos
df.corr()

"""Plotando os dados"""

import matplotlib.pyplot as plt
plt.scatter(df[['area']],df[['produção']])
plt.ylabel('produção')
plt.xlabel('area')
plt.show()

from sklearn.linear_model import LinearRegression

# criando e treinando o modelo
model = LinearRegression()
model.fit(df[['area']], df[['produção']])

# para visualizar os coeficientes encontrados
print("Equação obtida: ", model.coef_, "x +",model.intercept_)

# utilizando o modelo
dteste = pd.DataFrame({'area':[3000]})
resposta = model.predict(dteste)
print("Produção de banana para uma área de 3000 hectares: ", resposta)

coeficiente = model.score(df[['area']],df[['produção']])
print("Coeficiente de determinação: ", coeficiente)

"""Aproveitando o resultado do treinamento para plotar a regressão no gráfico
---
"""

import matplotlib.pyplot as plt

produção = [ i for i in range(0,76000)]
dteste = pd.DataFrame({'produção': produção})
resposta = model.predict(dteste)

plt.ylabel('produção')
plt.xlabel('area')
plt.plot(df[['area']],df[['produção']] ,'bo', dteste[['produção']], resposta, 'g--')
plt.show()