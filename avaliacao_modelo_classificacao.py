# -*- coding: utf-8 -*-
"""avaliacao_modelo_classificacao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bO3LCusiUPePS6iXpU88qAyl4WL13K9C
"""

from pandas import read_csv
from sklearn.model_selection import train_test_split
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense
import matplotlib.pyplot as plt

baseDados = read_csv("/content/derramamento_oleo.csv",sep=",")
baseDados

X = baseDados.values[:,0:49]
y = baseDados.values[:,49]

# Geração dos arquivos de treino, teste e validação
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33)

# Geração do modelo
model = Sequential()
model.add(Dense(100, activation='tanh' ,kernel_initializer='normal',input_shape=(49,)))
model.add(Dense(80, activation='relu' ))
model.add(Dense(1, activation='sigmoid')) # binario - somente duas classes 0 ou 1

# Compilação do modelo
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

history = model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=250, batch_size=32, verbose=1)

# plot loss during training
plt.subplot(211)
plt.title('Grafico de Custo')
plt.plot(history.history['loss'], label='Perdas durante o Treinamento')
plt.plot(history.history['val_loss'], label='Perdas durante os Testes')
plt.xlabel('Epocas')
plt.ylabel('Perdas')
plt.legend()


# plot accuracy during training
#plt.subplot(212)
#plt.title('Gráfico de Desempenho')
#plt.plot(history.history['acc'], label='Acurácia durante o Treinamento')
#plt.plot(history.history['val_acc'], label='Acurácia durante os Testes')
#plt.xlabel('Epocas')
#plt.ylabel('Acurácia')
#plt.legend()
#plt.show()